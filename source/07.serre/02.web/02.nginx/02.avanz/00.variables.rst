.. highlight:: nginx

Variables predefinidas
======================
:program:`nginx` tiene predefinidas `un gran número de variables
<http://nginx.org/en/docs/varindex.html>`_. Aquí trataremos solamente
algunas de las más recurrentes:

Destacadas
----------

`$args <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_args>`_
   Contiene los argumentos pasados a través de la |URL|. Es decir,
   si la petición fue:

   .. code-block:: none

      GET /form.php?name=Pepe&age=21

   el valor de esta variable será :kbd:`name=Pepe&edad=21`

`$arg_xxx <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_arg_>`_
   Contiene el valor del argumento *xxx* pasado a través de la |URL|. En el
   caso de la petición anterior, :kbd:`$arg_age` valdría **21**.

`$cookie_xxx <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_cookie_>`_
   Contiene el valor de la *cookie* "xxx".

`$host <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_host>`_
   Nombre que se usa para conectar al servidor. Véase el siguiente apartado para
   más información.

`$https <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_https>`_
   Vale *on* si la petición se hizo a través de |HTTP|\ s.

`$http_xxx <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_http_>`_
   Valor del campo de cabecera *xxx*.

`$invalid_referer <http://nginx.org/en/docs/http/ngx_http_referer_module.html#var_invalid_referer>`_
   Vale 1 si el ``Referer`` de la petición es inválido, y la cadena vacía si es
   correcto. Para definir la validez se usa la directiva `valid_referers
   <http://nginx.org/en/docs/http/ngx_http_referer_module.html#valid_referers>`_.
   Por ejemplo::

      server {
         # Configuración...

         location ~ \.(:?jpe?g|png|gif)$ {
            valid_referers  server_names;
            if ($invalid_referer) {
               return 403;
            }
         }
      }

   El código impide que se hagan enlaces calientes desde otros sitios web
   a las imágenes de nuestro sitio.

`$is_args <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_is_args>`_
   Vale *?* si la línea de petición contenía argumentos y la cadena vacía si no
   los contenía. Es útil en redirecciones. Por ejemplo, si se quiere redirigir
   una petición no segura a segura::

      return 301 https://$host$uri$is_args$args;

`$remote_addr <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_remote_addr>`_
   Dirección |IP| del cliente original. Tal dirección, si media un :ref:`proxy <proxies>`
   no tiene por qué coincidir con la de la máquina que hace conexión con el
   servidor (véase `cliente original <nginx-clientip>`_ más adelante). Para
   obtener la |IP| de la máquina que hace conexión directa existe `realip_remote_addr
   <http://nginx.org/en/docs/http/ngx_http_realip_module.html#var_realip_remote_addr>`_.

`$request <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request>`_
   Línea original de petición.

`$request_method <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_method>`_
   Método de petición.

`$request_uri <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_uri>`_
   Línea original de petición, incluyendo argumentos.

`$uri <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_uri>`_
   |URL| de la petición modificada por las redirecciones internas operadas por :program:`nginx`.

`$scheme <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_scheme>`_
   Protocolo. Puede valer *http* o *https*.

`$server_name <http://nginx.org/en/docs/http/ngx_http_core_module.html#var_server_name>`_
   Nombre del servidor

``$host``, ``$http_host`` y ``$server_name``
--------------------------------------------
Las tres variables refieren el nombre del servidor con que puede ser algo
confuso:

* ``$http_host`` es, tal cual, el valor del campo ``Host``. Por tanto, puede
  incluir el puerto de conexión.
* ``$server_name`` es el valor de la directiva ``server_name`` que provocó la
  elección del bloque ``server``.
* ``$host`` es el nombre como aparece en la primera línea de la petición (la que
  incluye el método) o, si no aparece ahí, el nombre que aparece en el campo
  ``Host`` o, si no, el valor de la variable ``$server_name``. A diferencia de
  ``$http_host`` jamás incluirá el puerto de conexión.

.. |URL| replace:: :abbr:`URL (Uniform Resource Locator)`
