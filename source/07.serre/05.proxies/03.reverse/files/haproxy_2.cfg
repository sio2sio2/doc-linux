global
   # Directivas que ya trae el fichero

	tune.ssl.default-dh-param 2048 

defaults
   # Directivas que ya trae el fichero

#
# Recibe el tráfico y lo clasica en:
# - SSH: Lo envía directamente al servidor SSH.
# - OpenVPN: Lo envía directamente al sevidor VPN.
# - SSL: Se envía al propio haproxy para que lo desemcapsule.
#
frontend main
	bind *:443
	mode tcp
	option tcplog
	tcp-request inspect-delay 3s
	tcp-request content accept if HTTP

	acl ssl_request		req.ssl_hello_type 1
	acl ssh_request		payload(0,7) -m bin 5353482d322e30

	use_backend	pre-ssl	if ssl_request
	use_backend	ssh	if ssh_request
	use_backend	vpn	if !{ req.ssl_hello_type 1 } !{ req.len 0 } 


backend ssh
	mode tcp
	timeout server 2h
	server ssh 127.0.0.1:22


backend vpn
	mode tcp
	timeout server 2h
	server openvpn 127.0.0.1:1194


#
# Vuelve a haproxy para desemcapsular el SSL.
#
backend pre-ssl
	mode tcp
	timeout server 2h
	server ssl 127.0.0.1:10443 send-proxy-v2

#
# Desencapsulamos y comprobamos si el SSL ocultaba:
# - HTTP
# - SSH
# - OpenVPN
#
frontend ssl
	bind 127.0.0.1:10443 ssl crt /etc/haproxy/keycert.pem accept-proxy
	mode tcp
	option tcplog
	tcp-request inspect-delay 3s
	tcp-request content accept if { req.ssl_hello_type 1 }
    
	timeout client 2h

	acl ssh_request		payload(0,7) -m bin 5353482d322e30

	use_backend	http	if  HTTP
	use_backend	ssh	if  ssh_request
	default_backend	vpn


backend http
	mode http
	option forwardfor
   http-request add-header X-Forwarded-Proto https
   #reqadd X-Forwarded-Proto:\ https   # Sintaxis anterior a haproxy 2.1
	server nginx 127.0.0.1:80
