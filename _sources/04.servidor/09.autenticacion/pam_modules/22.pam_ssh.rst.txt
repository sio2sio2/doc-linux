``pam_ssh``
===========

**Descripción**
   Realiza la autenticación mediante una clave privada creada con
   :program:`ssh-keygen`. La clave privada la busca dentro de :file:`~/.ssh`
   con los nombres con los que habitualmente la crea el programa reseñado.
   
   Además, en la fase de sesión lanza :program:`ssh-agent` y añade la clave
   con lo que el módulo resulta útil cuando esta clave privada se usa, además,
   para autenticarse en servidores *SSH* remotos. La configuración de *Debian*
   está pensada para que la contraseña de usuario y la frase de paso coincidan.
   Si no es así, puede sustituirse la configuración predeterminada por esta::

      # /usr/share/pam-configs/ssh

      Name: Authenticate using SSH keys and start ssh-agent
      Default: yes
      Priority: 1024
      Auth-Type: Primary
      Auth:
         [success=end auth_err=ignore default=ignore ignore=ignore] pam_ssh.so use_first_pass debug
      Auth-Initial:
         [success=end auth_err=ignore default=ignore ignore=ignore] pam_ssh.so
      Session-Interactive-Only: yes
      Session-Type: Additional
      Session-Final:
         optional        pam_ssh.so


   Y ejecutar :program:`pam-auth-update` para regenerar la configuración.

**Grupos**
   Para *auth* y *session*

**Argumentos**
   ``use_first_pass``
      Si se uso otro método de autenticación previamente, no pide contraseña,
      sino que usa la ya introducida. Si la contraseña no es válida, se
      producirá error.
   ``try_first_pass``
      Como en el caso anterior, pero en caso de que la contraseña no sea válida,
      se pedirá una nueva contraseña.
   ``nullok``
      Permite que las claves no tenga frase de paso.
