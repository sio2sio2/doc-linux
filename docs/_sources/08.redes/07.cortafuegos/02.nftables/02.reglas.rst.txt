.. _iptables-rules:

Reglas
******
Si nuestro cortafuegos no lleva a cabo tareas muy complicadas, es posible seguir
usando la :ref:`sintaxis de iptables <iptables-sintaxis>` a través de la familia
de órdenes :program:`iptables-nft`, :program:`ip6tables-nft`,
:program:`ebtables-nft` y :program:`arptables-nft` sin preocuparnos siquiera de crear
tablas ni cadenas, puesto que estas órdenes, al ser ejecutadas, crean las
cadenas pertinentes. Así pues\ [#]_::

   # iptables-nft -vnL

creará las cadenas incluidas en las tablas *filter*\ [#]_::

   # nft list table filter
   table ip filter {
      chain INPUT {
         type filter hook input priority filter; policy accept;
      }

      chain FORWARD {
         type filter hook forward priority filter; policy accept;
      }

      chain OUTPUT {
         type filter hook output priority filter; policy accept;
      }
   }

y la expresión de una regla también será interpretada sin problemas::

   # iptables -A INPUT -p tcp --dport 80 -j DROP
   # nft list chain filter INPUT
   table ip filter {
      chain INPUT {
         type filter hook input priority filter; policy accept;
         meta l4proto tcp tcp dport 80 counter packets 0 bytes 0 drop
      }
   }

Hay, además, un traductor que permite ver cuál es el equivalente sin
llegar a hacer la orden efectiva::

   # iptables-translate -A INPUT -p tcp --dport 80 -j DROP
   nft add rule ip filter INPUT tcp dport 80 counter drop

Para tareas más complicadas, en cambio, es forzoso conocer la sintaxis modernas
y a ello nos dedicaremos.

Sintaxis
========
Las reglas se añaden a las cadenas y se van comprobando en el orden en el que
se encuentran en ella. se añaden del siguiente modo::

   # nft add|insert rule [<famiy>] <table> <chain> [handle <value>] [<selectores>] [<acciones>]

esto es:

- Se puede añadir (:kbd:`add`) o insertar (:kbd:`ìnsert`).
- Se indica la cadena a la que pertenece la regla.
- Con :kbd:`handle` se indica la posición de adición o inserción. Añadir
  implica hacerlo tras la posición e insertar antes de ella. Si no se indica
  :kbd:`handle`, :kbd:`add` añadirá la regla al final de la cadena e
  :kbd:`insert`, al commienza.
- Los selectores (uno o varios) permiten especificar cuál es el tráfico al que
  afecta la regla.
- Por último, debe especificarse cuál es el efecto o efectos de la regla sobre
  el tráfico al que afecta.

Por ejemplo::

   # nft add rule filter INPUT ip daddr 10.0.0.0/8 accept

en este caso, hay una condición, que la dirección de destino esté en la red
*10.0.0.0/8*; y una acción terminal: aceptar el tráfico. Puede no incluirse
acción alguna, en cuyo caso, la regla comprobará la condición... pero no
hará nada en particular (aunque puede tener sentido si :ref:`se quieren contar
paquetes <nftables-counter>`).

Para listar reglas podemos:

* Listar las reglas de una cadena::

   nft list chain [<family>] <table> <nombre>

  como, por ejemplo::

   # nft list chain filter INPUT

* Listas las reglas de todas las cadenas de una tabla::

   nft list table [<family>] <nombre>

  como por ejemplo::

   # nft list table filter

* Listar todas las reglas::

   # nft list ruleset

Es interesante la opción :kbd:`-a` que indica para cada regla el *handle* que le
corresponde y que podemos usar para borrar reglas::

   # nft delete rule [<family>] <table> <chain> handle <handle>

como por ejemplo::

   # nft delete rule filter INPUT handle 1

Si sustituimos :kbd:`list` por :kbd:`flush` lograremos el efecto de vaciar de
reglas la cadena, todas las cadenas de la tabla o todas las cadenas de todas las
tablas::

   # nft flush chain filter INPUT
   # nft flush table filter
   # nft flush ruleset

Condiciones
-----------
Algunas de las condiciones que podemos indicar son:

.. table::
   :class: nftables-matches

   +----------+-----------------+-----------------------------------------------------+
   | Criterio | Argumento       | Descripción                                         |
   +==========+=================+=====================================================+
   | ip       | protocol        | Protocolo de la capa superior (incluido |ICMP|)     |
   |          |                 +-----------------------------------------------------+
   |          |                 | ip protocol icmp                                    |
   |          |                 | ip protocol != tcp                                  |
   |          |                 | ip protocol {tcp, udp}                              |
   |          +-----------------+-----------------------------------------------------+
   |          | saddr           | Dirección de origen.                                |
   |          |                 +-----------------------------------------------------+
   |          |                 | ip saddr 8.8.8.8                                    |
   |          |                 | ip saddr 192.168.255.0/24                           |
   |          +-----------------+-----------------------------------------------------+
   |          | daddr           | Dirección de destino.                               |
   |          |                 +-----------------------------------------------------+
   |          |                 | ip daddr 8.8.8.8                                    |
   |          |                 | ip daddr != 192.168.255.0/24                        |
   +----------+-----------------+-----------------------------------------------------+
   | ip6      | saddr           | Dirección de origen.                                |
   |          |                 +-----------------------------------------------------+
   |          |                 | ip saddr ::/64                                      |
   |          +-----------------+-----------------------------------------------------+
   |          | daddr           | Dirección de destino.                               |
   |          |                 +-----------------------------------------------------+
   |          |                 | ip daddr ::/64                                      |
   +----------+-----------------+-----------------------------------------------------+
   | tcp      | sport           | Puerto de origen.                                   |
   |          |                 +-----------------------------------------------------+
   |          |                 | tcp sport ssh                                       |
   |          |                 | tcp sport 22-80                                     |
   |          +-----------------+-----------------------------------------------------+
   |          | dport           | Puerto de destino.                                  |
   |          |                 +-----------------------------------------------------+
   |          |                 | tcp dport != telnet                                 |
   |          |                 | tcp dport {22, 23}                                  |
   |          +-----------------+-----------------------------------------------------+
   |          | flags           | Indicadores |TCP|                                   |
   |          |                 +-----------------------------------------------------+
   |          |                 | tcp dport != telnet                                 |
   |          |                 | tcp dport {22, 23}                                  |
   +----------+-----------------+-----------------------------------------------------+
   | udp      | sport           | Puerto de origen.                                   |
   |          |                 +-----------------------------------------------------+
   |          |                 | udp sport 53                                        |
   |          +-----------------+-----------------------------------------------------+
   |          | dport           | Puerto de destino.                                  |
   |          |                 +-----------------------------------------------------+
   |          |                 | udp dport != 53                                     |
   +----------+-----------------+-----------------------------------------------------+
   | ether    | saddr           | |MAC| de origen.                                    |
   |          |                 +-----------------------------------------------------+
   |          |                 | ether saddr 00:11:22:33:44:55                       |
   |          +-----------------+-----------------------------------------------------+
   |          | daddr           | |MAC| de destino.                                   |
   |          |                 +-----------------------------------------------------+
   |          |                 | ether daddr 00:11:22:33:44:55                       |
   |          +-----------------+-----------------------------------------------------+
   |          | type            | Tipo de protocolo de capa superior.                 |
   |          |                 +-----------------------------------------------------+
   |          |                 | ether type arp                                      |
   |          |                 | ether type ip                                       |
   |          |                 | ether type vlan                                     |
   +----------+-----------------+-----------------------------------------------------+
   | vlan     | id              | Identificador de la |VLAN|.                         |
   |          |                 +-----------------------------------------------------+
   |          |                 | vlan id 10                                          |
   +----------+-----------------+-----------------------------------------------------+
   | ct       | state           | Estado de la conexión: *new*, *established*,        |
   |          |                 | *related*, *untracked*.                             |
   |          |                 +-----------------------------------------------------+
   |          |                 | ct state {established, related}                     |
   |          +-----------------+-----------------------------------------------------+
   |          | status          | Estado de la conexión (p.e. *snat* o *dnat* para    |
   |          |                 | tráfico que ha sufrido |SNAT| o |DNAT|.             |
   |          |                 +-----------------------------------------------------+
   |          |                 | ct status dnat                                      |
   |          +-----------------+-----------------------------------------------------+
   |          | mark [set]      | Comprueba la marca de la conexión o la fija si se   |
   |          |                 | usa :kbd:`set`.                                     |
   |          |                 +-----------------------------------------------------+
   |          |                 | ct mark 1                                           |
   |          |                 | ct mark set 1                                       |
   |          +-----------------+-----------------------------------------------------+
   |          | direction       | Dirección del paquete: *original* o *reply*         |
   |          |                 +-----------------------------------------------------+
   |          |                 | ct direction reply                                  |
   |          +-----------------+-----------------------------------------------------+
   |          | count [over]    | Comprueba si la cantidad de conexiones simultáneas  |
   |          |                 | no supera el límite indicado. Con :kbd:`over` se    |
   |          |                 | comprueba si lo supera.                             |
   |          |                 +-----------------------------------------------------+
   |          |                 | ct count 20                                         |
   +----------+-----------------+-----------------------------------------------------+
   | meta     | | iifname       | Nombre de la interfaz de entrada o salida.          | 
   |          | | oifname       +-----------------------------------------------------+
   |          |                 | meta iifname "eth0"                                 |
   |          |                 | meta iifname "eth*"                                 |
   |          +-----------------+-----------------------------------------------------+
   |          | | iif           | Índice de la interfaz que se adjudica al crearla    |
   |          | | oif           | y puede consultarse en                              |
   |          |                 | :file:`/class/net/eth0/ifindex`. La comparación es  |
   |          |                 | más eficiente que para :kbd:`iifname`, pero el      |
   |          |                 | índice no es                                        |
   |          |                 | reciclable, por lo que sólo es recomendable usarlo  |
   |          |                 | si la interfaz se crea una vez y no se destruye     |
   |          |                 | (p.e. una interfaz física). Consulte `este enlace`_.|
   |          |                 +-----------------------------------------------------+
   |          |                 | meta iif eth0                                       |
   |          +-----------------+-----------------------------------------------------+
   |          | | iifgroup      | Grupo al que pertenece la interfaz de entrada o     |
   |          | | oifgroup      | salida. Las interfaces pueden asignarse a un grupo  |
   |          |                 | (ver :manpage:`ip-link(8)`) y definir los nombres   |
   |          |                 | de los grupos en :file:`/etc/iproute2/groups`.      |
   |          |                 +-----------------------------------------------------+
   |          |                 | meta iifgroup 99                                    |
   |          +-----------------+-----------------------------------------------------+
   |          | | iiftype       | Tipo de la interfaz (*ether*, *loopback*, etc.)     |
   |          | | oiftype       |                                                     |
   |          |                 +-----------------------------------------------------+
   |          |                 | meta iiftype loopback                               |
   |          +-----------------+-----------------------------------------------------+
   |          | mark [set]      | Comprueba o establece la marca del paquete.         |
   |          |                 +-----------------------------------------------------+
   |          |                 | meta mark 2                                         |
   |          |                 | meta mark set 2                                     |
   +----------+-----------------+-----------------------------------------------------+

.. _este enlace: https://serverfault.com/a/985167

.. note:: Consulte :manpage:`nft(8)` para una lista completa de criterios y
   argumentos o `este artículo en la wiki de nftables
   <https://wiki.nftables.org/wiki-nftables/index.php/Quick_reference-nftables_in_10_minutes>`_.

Tenga presenta que:

* Pueden acomularse condiciones en una misma sentencia::

   ip saddr 8.8.8.8 tcp dport telnet

* Cuando los valores son numéricos la igualdad se nota no indicando operador,
  pero también pueden usarse operadores de comparación (:kbd:`!=`, :kbd:`<`),
  rangos o valores hexadecimales (usando la notación :kbd:`0x`)::

   tcp dport 80
   tcp dport != 80
   tcp dport >= 80
   tcp dport 0x50
   tcp dport 80-120

  .. warning:: Si ejecuta órdenes directamente en la *shell* tendrá que escapar
     algunos de estos caracteres.

* Es posible incluir como valor conjuntos de valores::

   tcp dport {http, https}
   tcp dport != {http, https}
   iif {eth0, eth1}

  .. seealso:: Revise el :ref:`epígrafe dedicado a conjuntos <nftables-sets>`.

.. _nftables-counter:

Habremos creado tres contadores en la misma regla: el primero cuenta cualquier
tipo de paquete, el segundo sólo los paquetes |TCP| y el segundo los paquetes
que son de tráfico |SSH|.

Acciones
--------
Las acciones pueden ser:

- *Terminales*, que terminan la evaluación de la regla.
- *No terminales*, que son aquellas que no acaban la evaluación o establecen una condición.


En una regla puede encontrarse como mucho una acción terminal, pero pueden añadirse varias no terminales.
Además las terminales no tienen por qué encontrarse al final de la sentencia,
sino que pueden intercalarse entre las condiciones. Por ejemplo::

   # nft add table filter
   # nft add chain filter INPUT "{type filter hook input priority 0;}"
   # nft add rule filter INPUT ct state new ip protocol TCP log prefix '"TCP: "' \
                                            tcp dport ssh log prefix '"SSH: "' accept

generará una línea de registro advirtiendo de que una nueva conexión cuando ésta
sea |TCP|, y añadirá otra línea adicional advirtiendo de que es |SSH| cuando,
además, sea tráfico de este tipo.

.. _nftables-acc-term:

.. rubric:: Acciones terminales

.. table::
   :class: nftables-acc-term

   +--------------+------------------------------------------------------------+
   | Acción       |   Descripción                                              |
   +==============+============================================================+
   | accept       | Permite el paquete y acaba la evaluación de la cadena.     |
   +--------------+------------------------------------------------------------+
   | drop         | Desecha el paquete y acaba la evaluación.                  |
   +--------------+------------------------------------------------------------+
   | reject       | Rechaza el paquete, pero informando al emisor. Admite      |
   |              | añadir la causa (el tipo |ICMP| o un |TCP| reset si el     |
   |              | tráfico de origen es |TCP|). Si se prescinde de la causa,  |
   |              | se envía un :kbd:`port-unreachable`                        |
   |              +------------------------------------------------------------+
   |              | reject with icmp type host-unreachable                     |
   |              | reject with icmp type port-unreachable                     |
   |              | reject with tcp reset                                      |
   +--------------+------------------------------------------------------------+
   | queue        | Envía el paquete a una cola en el espacio de usuario para  |
   |              | que lo gestione una aplicación y acaba la evaluación.      |
   |              | Véase `cómo enviarlos a la cola`_.                         |
   +--------------+------------------------------------------------------------+
   | continue     | Prosegue la evaluación con la siguiente regla.             |
   +--------------+------------------------------------------------------------+
   | return       | Deja de evaluar las reglas de la cadena actual y regresa   |
   |              | a la regla posterior a la que invocó el salto. En una      |
   |              | cadena base, equivale a *accept*.                          |
   +--------------+------------------------------------------------------------+
   | jump <chain> | Salta a la cadena de usuario que se especifique y, al      |
   |              | término de ésta se prosigue por la siguiente regla.        |
   +--------------+------------------------------------------------------------+
   | goto <chain> | Salta también a la cadena especificada, pero al término    |
   |              | prosigue al final de la cadena desde la que se invocó.     |
   +--------------+------------------------------------------------------------+

.. _cómo enviarlos a la cola: https://wiki.nftables.org/wiki-nftables/index.php/Queueing_to_userspace

.. _nftables-acc-no-term:

.. rubric:: Acciones no terminales

No llevan acabo una acción que interrumpa la evaluación o introducen alguna
condición adicional

.. table::
   :class: nftables-acc-no-term

   +------------+-------------+---------------------------------------------------------------------------------------+
   |  Acción    | Argumento   | Descripción                                                                           |
   +============+=============+=======================================================================================+
   | log        | | prefix    | Registra el paso de un paquete. :kbd:`prefix` añade un prefijo a la                   |
   |            | | level     | cadena de registro y :kbd:`level` indica cuál debe ser la importancia:                |
   |            |             | *emerg*, *alert*, *crit*, *err*, *warn*, *notice*, *info* o *debug*.                  |
   |            |             +---------------------------------------------------------------------------------------+
   |            |             | nft add rule filter INPUT ct state new dport ssh log prefix '"SSH: "' level info      |
   +------------+-------------+---------------------------------------------------------------------------------------+
   | counter    | [name]      | Añade un contador a la regla.                                                         |
   |            |             +---------------------------------------------------------------------------------------+
   |            |             | | nft add rule filter INPUT ct state new dport ssh counter                            |
   |            |             | | nft add rule filter INPUT ct state new dport ssh counter name pines                 |
   +------------+-------------+---------------------------------------------------------------------------------------+
   | snat       | to          | Realiza un |SNAT|.                                                                    |
   |            |             +---------------------------------------------------------------------------------------+
   |            |             | nft add rule nat POSTROUNTING oif eth0 snat to 172.22.0.2                             |
   +------------+-------------+---------------------------------------------------------------------------------------+
   | masquerade | [to :port]  | Realiza un |SNAT| copiando la dirección de la interfaz de salida.                     |
   |            |             +---------------------------------------------------------------------------------------+
   |            |             | nft add rule nat POSTROUNTING oif eth0 masquerade                                     |
   +------------+-------------+---------------------------------------------------------------------------------------+
   | dnat       | to          | Realiza un |DNAT|.                                                                    |
   |            |             +---------------------------------------------------------------------------------------+
   |            |             | | nft add rule nat PREROUNTING iif eth0 tcp dport {http,https} dnat to 192.168.255.10 |
   |            |             | | nft add rule nat PREROUNTING iif eth0 tcp dport 8080 dnat to 192.168.255.10:80      |
   |            |             | | nft add rule nat PREROUNTING iif eth0 dnat tcp port map {80: 10.0.0.3,443: 10.0.0.4}|
   +------------+-------------+---------------------------------------------------------------------------------------+
   | redirect   | [to :port]  | Realiza un |DNAT| hacia la propia máquina.                                            |
   |            |             +---------------------------------------------------------------------------------------+
   |            |             | | nft add rule nat PREROUNTING iif eth0 tcp dport 80 redirect                         |
   |            |             | | nft add rule nat PREROUNTING iif eth0 tcp dport 8080 redirect to :80                |
   +------------+-------------+---------------------------------------------------------------------------------------+
   | limit      | rate [over] | Establece una condición que será verdadera cuando se alcance o se supere (con *over*) |
   |            |             | el ratio espeficiado. El ratio cuenta paquetes, *bytes*, *kbytes*, *mbytes* en        |
   |            |             | periodos de *second*, *minute*, *hour*, *day* o *week*. Puede además añadir           |
   |            |             | :kbd:`burst` para la :ref:`definición de la ráfaga <iptables-limit>`.                 |
   |            |             +---------------------------------------------------------------------------------------+
   |            |             | | nft add rule filter INPUT ip protocol icmp limit rate 1/second accept               |
   |            |             | | nft add rule filter INPUT ip protocol icmp limit rate over 1/second drop            |
   |            |             | | nft add rule filter INPUT iff eth0 limit rate over 10/seconds burst 50 packets drop |
   +------------+-------------+---------------------------------------------------------------------------------------+
   | | add      | @setname    | Añade o actualiza elementos de un :ref:`conjunto <nftables-sets>` desde una regla.    |
   | | update   |             +---------------------------------------------------------------------------------------+
   |            |             | nft add rule filter INPUT icmp type echo-request add @testers {ip saddr timeout 2m}   |
   +------------+-------------+---------------------------------------------------------------------------------------+

Algunas consideraciones:

* Pueden crearse **contadores** con nombre asociándolos a una tabla y usándolos en alguna regla de alguna cadena
  de esa tabla::

   # nft add table filter
   # nft add chain filter INPUT "{type filter hook input prority 0;}"
   # nft add counter filter pines
   # nft add rule filter INPUT ip protocol icmp counter name pines
   # nft list table filter

  Los contadores con nombre pueden usarse en varias reglas y, además, resetear valor::

   # nft reset counter filter pines

* Las explicaciones sobre la limitación del tráfico (:kbd:`limit`) algo
  prolijas, así que les dedicaremos :ref:`un epígrafe exclusivo <nftables-limit>`.

Persistencia
============

.. rubric:: Notas al pie

.. [#] EN *Buster* basta con utilizar :command:`iptables`, puesto que es la
   alternativa predeterminada frente al antiguo :command:`iptables` que ha
   pasado a renombrase como :command:`iptables-legacy`.

.. [#] No debe entenderse de lo dicho que para crear las tablas, hay que usar la
   orden de listado primero. Insertar una regla, por ejemplo, ya crea la
   infraestructura necesaria.

.. |MAC| replace:: :abbr:`MAC (Media Access Control)`
.. |VLAN| replace:: :abbr:`VLAN (Virtual LAN)`
.. |DNAT| replace:: :abbr:`DNAT (Destination NAT)`
.. |SNAT| replace:: :abbr:`SNAT (Source NAT)`
.. |TCP| replace:: :abbr:`TCP (Transmission Control Protocol)`
.. |ICMP| replace:: :abbr:`ICMP (Internet Control Message Protocol)`
