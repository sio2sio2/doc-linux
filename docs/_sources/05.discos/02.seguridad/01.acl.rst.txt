.. _acls:

Permisos |ACL|
**************
Cuando el :ref:`sistema de permisos POSIX <ugo>`, esto es, el sistema |UGO|, no
es suficiente y se requiere más granularidad en la definición de permisos, en
Linux se puede recurrir a las listas de centrol de accesos (|ACL| por su
acrónimo en inglés).

.. note:: En realidad, las |ACL| también forman parte del estándar POSIX; y `tal
   como se definen en este estándar es como se encuentran implementadas en Linux
   <https://www.usenix.org/legacy/publications/library/proceedings/usenix03/tech/freenix03/full_papers/gruenbacher/gruenbacher_html/main.html>`_.

Requisitos
==========
Para poder usar |ACL|\ s debemos cumplir dos requisitos:

* Que el sistema de archivos las soporte y las tenga habilitadas.
* Disponer la herramienta que permite manejarlas.
  
**Habilitación**
   El soporte podemos darlo por descontado ya que los sistemas de archivos
   modernos más usado en *Linux* las soportan (ext4, brtfs, xfs, zfs).

   También es bastante probable que estén ya habilitadas y listas para usarse,
   pero es conveniente cerciorarse. Pueden estar:

   * Habilitadas como opciones de montaje por defecto al haber creado el
     sistema. Podemos comprobar si esto es así\ [#]_ con::

      # tune2fs -l /dev/sda3 | grep 'mount options'
      Default mount options:    user_xattr acl

     suponiendo que la partición sobre la que se asienta el sistema de archivos
     es :file:`/dev/sda3`.

   * Si no están habilitadas como opción por defecto, tenemos dos opciones:

     + Fijar la opción de montaje *acl* en :file:`/etc/fstab`.
     + Habilitarlas como opción de montaje por defecto::

         # tune2fs -o acl /deb/sda3

   .. note:: Para información sobre como habilitar las |ACL| en zfs puede leer
      `este artículo <https://blog.alt255.com/post/posix-acls/>`_.

**Instalación**
   Tan fácil como instalar el paquete::

      # apt install acl

Filosofía de funcionamiento
===========================
Antes de que pasemos a ver cómo se definen es indispensables que entendamos cuál
es su filosofía de funcionamiento.  Las |ACL|\ s POSIX no son un sistema
alternativo al sistema |UGO|, sino complementario. Por tanto, los archivos
siguen teniendo un propietario, un grupo propietario y tres ternas de permisos\
[#]_, pero:

* En adición a ellos pueden añadirse ternas de permisos para aquel usuario o 
  grupo que consideremos pertinente.

* Cuando se definen sobre un directorio, estas nuevas ternas se pueden definir
  como heredables lo cual significa que los archivos y directorios incluidos
  las heredarán.

.. _getfacl:
.. _setfacl:

.. index:: getfacl, setfacl

Operativa
=========
Las dos herramientas fundamentales son :manpage:`getfacl`, para consultar las
|ACL|\ s y :manpage:`setfacl` para manipularlas. Para ilustrar su uso supongamos
que tenemos cierto directorio llamado :file:`/home/share` sobre el que queremos
definir |ACL|\ s.

Comencemos por crear el directorio::

   # mkdir /home/share
   # ls -ld /home/share
   drwxr-xr-x 2 root root 4096 oct 15 21:32 /home/share

Hasta aquí sabemos todo y todo nos es familiar, ya que de hecho no hemos
definido ninguna |ACL| y, si usamos :ref:`getfacl <getfacl>`::

   # getfacl /home/share
   getfacl: Eliminando '/' inicial en nombres de ruta absolutos
   # file: home/share/
   # owner: root
   # group: root
   user::rwx
   group::r-x
   other::r-x

lo que obtendremos, con mucha palabrería son los permisos regulares del sistema
POSIX.

Podemos empezar añadiendo una regla para un usuario llamado *apestado*\ [#] al
que le vamos a vetar cualquier acción sobre el directorio::

   # setfacl -m 'u:apestado.0' /home/share

En este caso, la opción :kbd:`-m` indica que queremos modificar las reglas que
ya haya definidas, no sobrescribirlas (y, consecuentemente, perderlas). A
continuación se indica la regla, donde la "u" indica que es una regla para un
usuario, "apestado" que ese es el usuario (también podría haberse usado un
|UID|) y el "0" final cuáles son los permisos en formato númerico. También puede
usarse un formato de letras en que la ausencia del permiso se indica con un
guión (por tanto, el equivalente de "0" es "\-\-\-"). Si ahora usamos :ref:`ls
<ls>`::

   # ls -ld /home/share
   drwxr-xr-x+ 2 root root 4096 oct 15 21:32 /home/share/

aparecerá un signo "+" que indica que el archivo tiene definida alguna regla de
permisos adicional:

.. code-block:: console
   :emphasize-lines: 4, 6

   # getfacl -c /home/share
   getfacl: Eliminando '/' inicial en nombres de ruta absolutos
   user::rwx
   user:apestado:---
   group::r-x
   mask::r-x
   other::r-x

.. rubric:: Notas al pie

.. [#] La orden equivalente en xfs es :manpage:`xfs_info`.
.. [#] E incluso :ref:`permisos especiales <perm-especiales>`, si estos son
   necesarios.
.. [#] Que deberá existir en el sistema, por lo que si seguimos las indicaciones
   nos tocará crearlo:.

      # adduser --disabled-password --gecos "Usuario apestado" --no-create-home apestado

.. |UGO| replace:: :abbr:`UGO (User, Group, Other)`
.. |UID| replace:: :abbr:`UID (User IDentifier)`
