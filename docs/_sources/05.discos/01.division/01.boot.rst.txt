.. _arranque:

Arranque
========
Los ordenadores al iniciarse cargan el *firmware* de la placa base, cuya
objetivo final es iniciar el proceso de arranque del sistema operativo. Ahora
bien, existen dos tipos distintos de *firmware*.

- El antiguo |BIOS| de 16 bits.
- El moderno |UEFI| o |EFI|\ [#]_ de 32 *bits* (arquitectura *x86*) ó 64 *bits*
  (arquitectura *x86_64*).

Dependiendo de cuál sea el *firmware* se llevará a cabo el arranque de una u
otra manera. A fecha de redacción, estamos en una etapa de transición en la que:

- Existen aún bastantes equipos antiguos cuyas placas base sólo disponen de
  |BIOS|.
- La mayoría de los equipos disponen de |UEFI|, pero ésta incluye un modo
  de compatibilidad con |BIOS|.
- Algunos pocos tienen |UEFI| y carecen de éste modo de compatibilidad.

Es de esperar que |BIOS| acabe desapareciendo\ [#]_, pero entre tanto es
conveniente conocer ambos arranques.

En ambos sistemas es posible definir una secuencia que indique un orden de
comprobación de dispositivos de manera que se arranque por el primero dentro de
la secuencia que disponga de un sistema arrancable.

|BIOS|
------
Es un sistema antiguo y bastante básico que comienza la carga del sistema
operativo leyendo el principio del primer sector del disco (el denominado
|MBR|). Se limita a ello sin entender absolutamente nada sobre tablas de
particiones ni sistemas de ficheros. En consecuencia, la responsabilidad del
arranque se delega en el código que se disponga en el |MBR|.

|UEFI|
------
Al contrario del sistema anterior, |UEFI| es capaz de entender la tabla de
particiones y algunos tipos de ficheros (obligatoriamente |FAT| y, para
dispositivos ópticos, ISO-9600), y es capaz de arrancar directamente los
sistemas cuyo arranque encuentre en una partición de disco de tipo *EF00* creada
a ese efecto y formateada típicamente en |FAT|. Se tratará de ello al estudiar
el particionado.

Proceso de arranque
-------------------

Podemos distinguir las siguientes fases:

#. Comprobación del hardware (memoria y discos). Durante esta fase, el *firmware*
   mediante pulsación de algunas teclas, brinda al usuario la posibilidad de
   reconfigurar (a lo que vulgarmente se denomina "entrar en la bios") o
   presentar un menú para seleccionar qué arranque se desea.

#. Si el usuario, escoge reconfigurar (habitualmente pulsando la tecla "Suprimir"),
   el *firmware* para el arranque y pasa a presentar un entorno donde el usuario
   puede cambiar los parámentros de arranque que se almacenan en memoria
   |NVRAM| (p.e. la secuencia de dispositivos de arranque). Al término de la
   configuración, escoja o no salvar los cambios, vuelve a iniciarse el proceso.

#. Si el usuario, escoge seleccionar el arranque, se presenta un menú que
   permite al usuario escoger entre todos los dispositivos de almacenamiento
   detectados en el caso de |BIOS|, o escoger entre todos los sistemas
   operativos de todos los dispositivos detectados en el caso de |UEFI|\ [#]_.
   La entrada seleccionada se añade a la secuencia de arranque comp primer ítem
   a comprobar.

#. Se revisa la secuencia de arranque y se procede a arrancar un sistema
   operativo según el orden en ella establecido.

.. rubric:: Notas al pie

.. [#] Intel publicó la especificación con el nombre de |EFI|. Al ser adoptada
   por la industria en general pasó a llamarse |UEFI|.
.. [#] Intel, por ejemplo, ha anunciado que dejará de dar soporte a |BIOS| a
   partir de 2020.
.. [#] En |UEFI| es posible porque este firmware sí entiende de particiones y es
   capaz de leer cuáles son los sistemas operativos instalados en cada disco.


.. |BIOS| replace:: :abbr:`BIOS (Basic I/O System)`
.. |EFI| replace:: :abbr:`EFI (Extensible Firmware Interface)`
.. |UEFI| replace:: :abbr:`UEFI (Unified Extensible Firmware Interface)`
.. |MBR| replace:: :abbr:`MBR (Master Boot Record)`
.. |FAT| replace:: :abbr:`FAT (File allocation Table)`
.. |NVRAM| replace:: :abbr:`NVRAM (Non-Volatile RAM)`
