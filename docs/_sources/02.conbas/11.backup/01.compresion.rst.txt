.. _compresion:

Compresión
==========

Los tres compresores habituales en los sistemas linux son :program:`gzip`,
:program:`bzip2` y :program:`xz`. Los tres presentan las mismas opciones básicas
con lo que conocido el funcionamiento de uno, se conoce el funcionamiento de los
todos.

Aunque los tres sigan presentes, :program:`bzip2` está en franco retroceso.
:program:`gzip` no tiene tan buen nivel de compresión, pero en compensación es
más rápido y gasta menos memoria, lo que puedo hacerlo apropiado para sistemas
que corren en un hardware más limitado. En cambio, :program:`xz`, que es el más
reciente, comprime más que :program:`bzip2` y requiere menos tiempo de
descompresión, lo que ha hecho que haya ido comiéndole terreno a
:program:`bzip2`\ [#]_. 

Compresiones habituales
-----------------------

.. _gzip:
.. index:: gzip

:command:`gzip`
   Comprime ficheros usando el algoritmo `LZ77
   <https://es.wikipedia.org/wiki/LZSS>`_.  Los ficheros comprimidos suelen
   marcarse con la extensión ``.gz``. Su sintaxis, análoga a la del resto
   de compresores es la siguiente::

      gzip [<opciones>] [fichero1 [fichero2 ...]]

   y su modo de proceder también. La orden::

      $ gzip fichero.txt

   Convierte el fichero original en el fichero comprimido
   :file:`fichero.txt.gz`. Obsérvese, pues, que el original se pierde. Si
   pasamos varios ficheros::

      $ gzip fichero1.txt fichero2.txt

   Obtendremos los ficheros :file:`fichero1.txt.gz` y :file:`fichero2.txt.gz`
   comprimidos por separado, ya que la fusión de varios ficheros en uno sólo es
   labor de empaquetación y la realiza un empaquetador como veremos más
   adelante (:ref:`tar <tar>`). Esto lo diferencia de herramientas de compresión
   típicas de los sistemas windows como :command:`zip` o :command:`rar`, que
   además de comprimir generan un fichero contenedor para poder incluir
   distintos ficheros en uno sólo.

   Las opciones más recurrentes de :command:`gzip` son:

   ``-1``, ... ``-9``:
      Indica el nivel de compresión desde 1, el nivel más bajo. a 9, el nivel
      más alto. Cuanto mayor sea el nivel de compresión más pequeño será el
      resultado, pero más costoso en procesador y tiempo llegar a él. Cuando no
      se indica ningún nivel explícitamente, se usa ``-6``.

   ``-c``:
      Comprime en la salida estándar. Esto permite tanto no perder el
      fichero original como cambiar el nombre del fichero resultante::

         $ gzip -c fichero.txt > fichero.comprimido.txt.gz

      La opción es obligada cuando no se comprime el contenido de un fichero,
      sino que al no indicarse ninguno como argumento, se toma el flujo de datos
      de la entrada estándar::

         $ echo "Quiero comprimir esto" | gzip -c > frase.txt.gz

   ``-t``:
      Comprueba la integridad de un fichero comprimido::

         $ gzip -t frase.txt.gz

   ``-l``:
      Devuelve el grado de compresión del fichero y los tamaños antes y después
      de la compresión::

         $ gzip -l frase.txt.gz

   ``-d``
      En vez de comprimir, descomprime. Por ejemplo::

         $ gzip -dc frase.txt.gz
         Quiero comprimir esto
         $ gzip -d frase.txt.gz
         $ cat frase.txt 
         Quiero comprimir esto

      Para la labor de descompresión se puede usar también la variante
      :command:`gunzip`.

.. _gunzip:
.. index:: gunzip

:command:`gunzip`
   Equivale a :code:`gzip -d`, y por tanto, se usa y admite los mismos comandos
   que :ref:`gzip <gzip>`.

.. _bzip2:
.. index:: bzip2

:command:`bzip2`
   Comprime ficheros usando el algoritmo de `Burrows-Wheeler
   <https://es.wikipedia.org/wiki/Compresi%C3%B3n_de_Burrows-Wheeler>`_.  Los
   ficheros comprimidos suelen marcarse con la extensión ``.bz2``.

   Su forma de funcionamiento y sintaxis son análogos a los de :ref:`gzip
   <gzip>` con lo que no requiere explicaciones adicionales.

.. _bunzip2:
.. index:: bunzip2

:command:`bunzip2`
   Equivale a :code:`bzip2 -d`, y por tanto, se usa y admite los mismos comandos
   que :ref:`bzip2 <bzip2>`.

.. _xz:
.. index:: xz

:command:`xz`
   Comprime ficheros usando el algoritmo `LZMA
   <https://es.wikipedia.org/wiki/LZMA>`_.  Los ficheros comprimidos suelen
   marcarse con la extensión ``.xz``.

   Su forma de funcionamiento y sintáxis son análogos a los de :ref:`gzip
   <gzip>` y :ref:`bzip2 <bzip2>` con lo que no requiere explicaciones
   adicionales.

.. _unxz:
.. index:: unxz

:command:`unxz`
   Equivale a :code:`xz -d`, y por tanto, se usa y admite los mismos comandos
   que :ref:`xz <xz>`.

Otros compresores
-----------------

Aunque lo habitual es usar alguno de los tres compresores arriba descritos,
junto a :ref:`tar <tar>` para poder crear un único fichero contenedor, en linux
están disponibles comandos para poder tratar ficheros ``zip`` (:index:`para
comprimir <zip>` :command:`zip` y :index:`para descomprimir <unzip>`
:command:`unzip`), ficheros ``rar`` (:index:`para comprimir <rar>`
:command:`rar` y :index:`para descomprimir <unrar>` command:`unrar`, aunque
ambos están en la rama *non-free*) o ficheros ``7z`` (mediante el
:index:`comando <p7zip>` :command:`p7zip`). No obstante, no es habitual usarlos
y, por lo general, su uso se limita a descomprimir ficheros que nos hayan podido
proporcionar terceras personas en estos formatos.

Por supuesto, también existen herramientas gráficas, que permiten de forma
sencilla elegir el formato entre todos los disponibles.

.. rubric:: Notas al pie

.. [#] Linux, por ejemplo, que tradicionalmente ofrecía descargar las fuentes
   comprimidas en formatos ``gz`` y ``bz2``, dejó de ofrecer este último
   formato en `a finales de diciembre de 2013
   <https://www.kernel.org/happy-new-year-and-good-bye-bzip2.html>`_, para pasar
   a ofrecerlas en ``gz`` y ``xz``. 
