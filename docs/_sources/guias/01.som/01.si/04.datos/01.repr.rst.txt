Representación de la información
********************************
Toda la información que almacena y lee un ordenador la maneja en código binario,
esto es, como una sucesión de ceros y unos. Esto supone que el sistema binario
es la base predominante en informática. Se tratará bajo este epígrafe:

- Cómo representar números en distintos sistemas de numeración.
- Cómo códificar caracteres alfanuméricos en código binario.

Sistemas de numeración
======================
Un :dfn:`sistema de numeración` es un conjunto de reglas y símbolos que permite
representar todos los números válidos. Los modernos sistemas de numeración son
posicionales, en los cuales el valor del símbolo dependen de la posición que
ocupa. Por ejemplo, en el número decimal **11**, el primero **1** representa 1
decena (o sea, su valor es 10 unidades), mientras que el segundo **1** tiene por
valor **1** unidad.

Por :dfn:`base` se entiende la cantidad de símbolos distintos usandos para
representar los números. El sistema que habitualmente utilizamos es el *sistema
decimal* o *en base 10* en que los 10 símbolos son **0**, **1**, **2**, **3**,
**4**, **5**, **6**, **7**, **8** y **9**.

De nuestro interés son:

+-------------+------+----------+--------------------------------------------------+
| Nombre      | Base | Símbolos | Razón de su interés                              |
+=============+======+==========+==================================================+
| Binario     |   2  |  0 y 1   | Es el que internamente usan los ordenadores para |
|             |      |          | representar la información.                      |
+-------------+------+----------+--------------------------------------------------+
| Octal       |   8  |  0-7     | Es muy sencilla su conversión a binario y        |
|             |      |          | viceversa, y la representación es más compacta.  |
+-------------+------+----------+--------------------------------------------------+
| Decimal     |  10  |  0-9     | Es el usado habitualmente por el ser humano.     |
+-------------+------+----------+--------------------------------------------------+
| Hexadecimal |  16  | 0-9, A-F | Es muy sencilla su conversión a binario y        |
|             |      |          | viceversa, y la representación es más compacta.  |
+-------------+------+----------+--------------------------------------------------+

En estos sistemas de numeración los números se representan de este modo.

.. table::
   :class: numeracion

   ======== ======== ======= ============
   Decimal  Binario  Octal   Hexadecimal 
   ======== ======== ======= ============
   0         0       0       0
   1         1       1       1
   2         10      2       2
   3         11      3       3
   4         100     4       4
   5         101     5       5
   6         110     6       6
   7         111     7       7
   8         1000    10      8
   9         1001    11      9
   10        1010    12      A
   11        1011    13      B
   12        1100    14      C
   13        1101    15      D
   14        1110    16      E
   15        1111    17      F
   16        10000   20      10
   17        10001   21      11
   18        10010   22      12
   19        10011   23      13
   20        10100   24      14
   ======== ======== ======= ============

Fundamentalmente, el interés sobre estos métodos radica en:

- Saber cómo convertir números entre los sistemas binario y decimal.
- Saber cómo convertir entre octal o hexadecimal y binario, ya que los dos
  primeros sistemas se suelen usar para escribir de una forma más compacta
  cifras binarias.

.. note:: En textos sin formato en los que no pueden usarse subíndices para
   notar cuál es la base en la que está expresado un número (p.e. expresar un
   hexadecimal con la forma :math:`\mathit{C1A}_{16)}`), es común usar esta
   notación:

   - *Binario*: Antecediendo el número con ``0b``: ``0b11011``.
   - *Octal*: Antecediendo el número con un cero: ``0745``.
   - *Decimal*: Se escribe de forma normal.
   - *Hexadecimal*: Antecediendo el número con ``0x``: ``0xC1A``.

Método general de conversión a decimal
--------------------------------------

.. todo:: Explicar.


Cuenta de la vieja (entre binario y decimal)
--------------------------------------------

.. todo:: Explicar.

Conversión entre octal y binario
--------------------------------

.. todo:: Explicar.

Conversión entre hexadecimal y binario
--------------------------------------

.. todo:: Explicar.

.. include:: /guias/01.som/99.ejercicios/010.repr.rst

Tipos de datos
==============
Todos la información la almacena el ordenador en forma de ceros y unos. Sin
embargo, los datos son de distinta naturaleza, esto es, de distinto tipo, y, en
consecuencia, deben existir distintos mecanismos para transformar la información
almacenada (exclusivamente) en forma binaria. Los datos, fundamentalmente, son:

* Números **enteros**.
* Números **reales**.
* **Caracteres**.

Representación de números enteros
---------------------------------

.. todo:: Signo, complemente a uno, complemento a dos, etc.

Representación de números reales
--------------------------------

.. todo:: Explicación de la coma flotante.

Representación de caracteres
----------------------------
Además de la representación numérica, en los ordenadores es necesario también
representar caracteres alfanuméricos, esto es, letras, números, símbolos de
puntuación o símbolos de control (p.e. un cambio de línea). Como la información
siempre debe tratarse en binario, para llevarlo a cabo se definen **tablas de
codificación** que relacionan cada símbolo con el código binario que lo
representa.

Un :dfn:`sistema de codificación` es un sistema normalizado que permite
codificar en formato binario un determinado conjunto de caracteres. Hay distintos
sistemas de codificación:

**De ancho fijo**
   Son sistemas de codificación en los que los códigos binarios tienen todos
   la misma longitud, esto es, el mismo número de cifras binarias.

   |ASCII|
      Es una sistema de codificación de ancho de 7 *bits* capaz de representar
      caracteres de control (los 32 primeros códigos y el último), de puntuación
      y letras del alfabeto inglés. Su importancia radica en que la mayoría de
      los sistemas de codificación son compatibles con él.

      .. seealso:: Consulte la `tabla de codificación ASCII
         <https://ascii.cl/es/>`_

      Como la información suele agruparse en grupos de 8 *bits* (1 *byte*), hay
      toda una serie de sistemas de codificación de ancho fijo de 8 *bits*,
      cuyos primeros 128 caracteres coinciden con la codificación |ASCII|. A
      estos sistemas de codificación suele denominárseles |ASCII| extendido.

   |ASCII| extendido
      Forma genérica de denominar a un conjunto dispar de sistemas de
      codificación de 8 *bits* cuyps primeros 128 códigos coinciden con el
      |ASCII| estándar y, por tanto, son compatibles con el |ASCII| original de
      7 *bits*. Los más comunes son:

      |CP| 437
         Sistema de codificación de 8 *bits* que extiende |ASCII| y cuyos 128
         códigos superiores se dedican a caracteres para el diseño de tablas,
         símbolos matemáticos, algunas letras griegas (usadas en matemáticas y
         física) y algunas vocales acentuadas que existen en las lenguas de Europa
         occidental, pero insuficientes para escribir correctamente en estas
         lenguajes. Era el usado en las primeros version de inglesas de MS-DOS.

      |CP| 850
         Semejante al anterior, pero sustituye algunos caracteres para el dibujo de
         tablas y letras griegas por los caracteres que faltan para lograr escribir
         completamente en las lenguas de Europa occidental. Se usaba en las
         versiones europeas de MS-DOS.

      Sistemas ISO/|IEC| 8859
         Conjunto de 15 sistemas de |ASCII| extendido cada uno de los cuales
         orientado a escribir un conjunto distinto de lenguas. El ISO-8859-1 es el
         encargado de codificar los caracteres necesarios para escribir en las
         lenguas europeas occidentales; y el ISO-8859-15 es una modificación de
         este para codificar el símbolo del euro y algunas pocas letras acentuadas. 
         
      |CP| 1252 Windows-1252
         SIstema de codificación de |ASCII| extendido usado en sistemas *Windows*
         hasta época más o menos reciente, muy semejante a ISO-8859-1, del cual
         difería en unos pocos caracteres de control.

   |UTF|\ -32
      Sistema de códificación de ancho fijo de 32 *bits* que es capaz de
      codificar los símbolos necesarios para escribir en todas las lenguas más
      algunos otros símbolos matemáticos, musicales, etc. Pese a esa ventaja,
      presenta dos desventajas:

      + Como cualquier carácter se representa con 4 *bytes*, aumenta
        considerablemente el tamaño para almacenar cualquier fichero de
        caracteres, aunque este sólo incluya caracteres muy simples.

      + Es incompatible con |ASCII|.

**De ancho variable**
   Al contrario de los anteriores, todos sus códigos binarios no tienen la misma
   longitud. Los dos sistemas de codificación de ancho variables más usados son:

   |UTF|\ -16
      Sistema de codificación de ancho variable que usa 2 ó 4 bytes para
      codificar todos los caracteres existentes. Para optimizar el tamaño, los
      caracteres que usan códigos de 2 bytes son los que permiten escribir en
      las lenguas de mayor uso. Tiene el inconveniente de que es incompatible
      con |ASCII|.

   |UTF|\ -8
      Sistema de codificación de ancho variable que usa códigos de 1, 2, 3 ó 4
      bytes para representar todos los caracteres existentes:

      + Codifica con 1 *bytes* los carácteres |ASCII| usando los mismos códigos,
        con lo que logra compatibilidad con este sistema de codificación.

      + Codifica con 2 *bytes* caracteres para escribir en las lenguas europeas,
        el árabe o el hebrero.

      + Códifica con 3 *bytes* caracteres no linguísticos de uso común y lenguas
        como el chino o el japonés.

      + Códifica con 4 *bytes* en resto de caracteres unicode.

      Dado que optimiza el tamaño, es compatible con |ASCII| y permite codificar
      cualquier carácter unicode es el sistema de codificación que usan los
      sistemas operativos modernos. Como contrapartida, ofrece el peor
      rendimiento al ser computado.

.. |CP| replace:: :abbr:`CP (Codepage)`
.. |IEC| replace:: :abbr:`IEX (International Electrotechnical Commission)`
.. |UTF| replace:: :abbr:`UTF (Unicode Transformation Format)`
