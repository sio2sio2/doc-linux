.. _ej-cert-dig:

Ejercicios sobre certificados digitales
=======================================

#. Obtención de un **certificado de servidor**:

   a. Como para generar un certificado de servidor mediante el :ref:`desafío HTTP
      <desafios-acme>` es necesario tener una máquina directamente accesible desde
      internet, cree una máquina virtual que disponga de |IP| pública. Ilustre todo el
      proceso que ha llevado a cabo para lograrlo, incluido el proceso de alta, si
      ha tenido que darse de alta en algún servicio. Las características de la
      máquina deben ser las siguientes:

      + La mínima posible (1 procesador y 512 MiB de |RAM|).
      + Puerto **22** abierto.
      + Acceso |SSH| mediante usuario/contraseña.

   #. Prepare la máquina virtual convenientemente, lo cual incluye:

      * Acceso mediante |SSH| y :ref:`autenticación mediante clave pública
        <ssh-auth-claves>`.
      * Abrir el acceso a la máquina por los puertos  **80** y **443**.

   #. Créese un dominio virtual gratuito en `freenom
      <https://www.freenom.com/es/index.html?lang=es>`_ (escoja el que más le guste)
      y en la definición de la zona asocie el nombre ``www`` a la máquina virtual
      anterior.

      .. note:: Entre que haga la definición y que el nombre sea resoluble, puede
         pasar algún tiempo.

   #. Instale acme.sh_ en la máquina virtual, preferiblemente mediante la creación
      previa de un paquete de *Debian*, como :ref:`se explica en el manual
      <nginx-https>`.

   #. Instale y configure mínimamente un :ref:`servidor nginx <n-ginx>`. A pesar de
      la abundante documentación, se le exponen aquí los pasos de instalación para
      que el servidor quede funcionando en modo no seguro:

      i. Instalar el paquete **nginx-light**.
      #. Sustituir el contenido de :file:`/etc/nginx/sites-available/default` por
         este otro:

         .. code-block:: nginx

            server {
               listen 80;

               server_name _;

               root /srv/www/default;
               try_files $uri $uri/ =404;
            }

      #. Cree el directorio :file:`/srv/www/default`,
      #. Incluya dentro del directorio anterior un fichero :file:`index.html` con
         cualquier código |HTML|.
      #. Reinicie el servicio::

            # invoke-rc.d nginx restart

      #. Pruebe desde un navegador a conectar con el servidor web para ver la
         página.

   #. Genere para su nombre de servidor un certificado `Let's Encrypt`_ según se
      :ref:`expone en los apuntes <nginx-https>` e instálelo. ¿Cuántos archivos
      se exportan para que los use el servidor web? ¿Cómo se llaman y qué
      contiene cada uno?

   #. Compruebe que acme.sh_ lista el certificado.

   #. Modifique la configuración del servidor para atender al tráfico seguro.

   #. Accede por |HTTP|\ s al servidor y cerciórese de que el certificado es
      válido.

#. Obtención de un **certificado personal**:

   a. Si no se posee ya, obtener un certificado personal de la |FNMT| acudiendo a
      la autoridad de registro más cercana. Describa, en cualquier caso, cómo es
      el proceso de obtención incluyendo capturas de pantalla de la parte que se
      hace con el navegador.

   #. Exportar en formato ``.p12`` el certificado almacenado en el navegador.

   #. Usar :command:`openssl` para extraer la clave pública en formato |PEM|.

   #. Consulte cuál es la información del certificado. ¿Con qué certificado está
      firmado? Descargue también este certificado. ¿Es este nuevo certificado un
      certificado raíz? Si no es así, ¿con qué certificado esta'firmado? Siga
      haciéndose estas preguntas hasta que alcance el certificado raíz de la |FNMT|

#. Comprobación de certificados con :command:`openssl`:

   a. Verifique que el certificado expedido con `Let's Encrypt`_ está
      correctamente firmado y vigente.

   #. Compruebe además que no está revocado haciendo una consulta |OCSP|.

   #. Revoque el certificado haciendo uso de acme.sh_ (y desinstálelo sin
      borrarlo ya que dejará de ser útil).

   #. Vuelva a comprobar el certifcado usando |OCSP|. ¿Es ahora válido?

   #. Elimine los ficheros de certificado y vuelva a obtener otro certificado
      para dejar el servidor en funcionamiento.

   #. Verifique que su certificado personal esa correctamente firmado y vigente.
   #. Consulte ante la |FNMT| que no está revocado.


   .. note:: Para hacer este ejercicio:

      * Lea con atención el epígrafe dedicado a la :ref:`verificación de
        certificados <verif-cert>`. 
      * Quizás deba obtener el certificado firmante (o no), porque su
        certificado puede o no contenerlo. Si no lo contiene, puede buscar en la
        :ref:`información del certificado <info-cert>` dónde hallarlo.
      * Los certificados firmantes obtenidos pueden no encontrarse en formato
        |PEM|. Tenga presente que necesitará transformarlos para operar con
        ellos.

.. _acme.sh: https://github.com/acmesh-official/acme.sh
.. _Let's Encrypt: https://letsencrypt.org/es/

.. |HTML| replace:: :abbr:`HTML (HyperText Markup Language)`
.. |RAM| replace:: :abbr:`RAM (Random Access Memory)`
.. |FNMT| replace:: :abbr:`FNMT (Fábrica Nacional de Moneda y Timbre)`
.. |OCSP| replace:: :abbr:`OCSP (Online Certificate Status Protocol)`
.. |PEM| replace:: :abbr:`PEM (Private Enhanced Mail)`
