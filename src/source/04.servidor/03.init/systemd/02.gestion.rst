Manipulación
============

Trataremos, simplemente, bajo este epígrafe cómo arrancar y parar servicios o
como habilitarlos o deshabilitarlos. Para saber cómo alterar la configuración de
arranque de un servidor, deberá recurrirse al epígrafe sobre
:ref:`personalización <systemd-personalizacion>`.

Un servicio activo puede pararse del siguiente modo::

   $ systemctl stop ssh.service

si suponemos que el servicio a parar es ``ssh.service``. Arrancar uno parado se
hace de forma similar::

   $ systemctl start ssh.service

Es muy común que lo que se desee más bien sea parar y rearrancar el servicio
para que el servicio adquiera una nueva configuración que se ha hecho. En este
caso hay dos alternativas, reiniciar el servicio que implicar una parada y un
rearranque::

   $ systemctl restart ssh.service

o recargar el servicio (para aquellos servicios que lo permiten) que no implica
una discontinuidad como en el caso anterior::

   $ systemctl reload ssh.service

Si no se tiene muy claro que el servicio admita esta última posibilidad puede
optarse por::

   $ systemctl reload-or-restart ssh.service

que recargará, si es posible, y reiniciará en caso contrario.

Independientemente de lo anterior, un servicio puede estar habilitado, lo cuál
implica que se iniciará automáticamente durante el arranque) o deshabilitado. La
forma es sencilla; esta orden lo habilitará::

   $ systemctl enable ssh.service

y esta lo deshabilitará::

   $ systemctl disable ssh.service

Bajo el epígrafe anterior se vio que las unidades podían estar enmascaradas a
fin de que no se pudieran arrancar ni manual ni automáticamente.
:command:`systemctl` también dispone un mecanismo para que se puedan enmascarar\ [#]_::

   $ systemctl mask ssh.service

o desemascarar unidades::

   $ systemctl unmask ssh.service  

.. rubric:: Notas al pie

.. [#]  Por lo que se ve, antes de enmascarar es necesario deshabilitar el
   servicio con *disable*.
