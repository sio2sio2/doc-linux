.. _qemu-uso:

Ejecución de máquinas
*********************
:program:`QEmu` no es un programa especialmente amigable para la ejecución de
máquinas. No hay más que leer la presentación `La jungla de los parámetros de
QEmu
<https://archive.fosdem.org/2018/schedule/event/vai_qemu_jungle/attachments/slides/2539/export/events/attachments/vai_qemu_jungle/slides/2539/qemu_cli_jungle.pdf>`_.
De hecho, ni siquiera pueden *crearse* máquinas virtuales, sino que al utilizar
uno o varios discos se declaran cuáles son las características de la máquina
virtual que los usará.

.. _qemu-arranque-basico:

Básica
======
La ejecución más básica que podemos hacer es la siguiente::

   $ qemu-system-x68_64 --enable-kvm -m 512 -hda disco.qcw

que, habilitando la aceleración por *hardware* (:kbd:`--enable-kvm`), levantará
una máquina:

* Con 512MiB de memoria |RAM| gracias a la opción :kbd:`-m`. Es necesario
  incluirla, porque la memoria predeterminada son *128* MiB, muy escasa para
  practicamente cualquier sistema operativo moderno. Puede incluirse
  :kbd:`G` para significar GiB. Por ejemplo, :code:`-m 1G`.
* Dispone de un disco duro representado por el archivo :file:`disco.qcw`.
* Con un procesador.
* Con una tarjeta de red configurada como |NAT| (según :ref:`la terminología de Virtualbox <virtualbox-red>`).
* Con una salida de vídeo compatible con |VGA|.
* Con firmware |BIOS|.

Sin embargo, si el disco está vacío, de poco servirá porque la máquina no
encontrará sistema operativo que arrancar. Así que podemos añadir un cedé y arrancar por él::

   $ qemu-system-x68_64 --enable-kvm -m 512 -hda disco.qcw -cdrom gparted.iso -boot d

donde hemos tenido que añadir la opción :kbd:`-boot` para poder arrancar desde
el cedé en vez de el disco duro, que es el comportamiento predeterminado, ya que
"d" significa CDRom, como "c" disco duro, y "n" red. En realidad es una
simplificación (según su página de manual :manpage:`qemu-system-x86_64` obsoleta) de:

:code:`-boot order=d`

Pueden indicarse varias letras para definir una secuencia de arranque. Por
ejemplo:

:code:`-boot order=ndc`

intenta primero un arranque por red, si éste falla, un arranque por la unidad
óptima y, por último, un arranque por el disco duro. También podemos optar por
presentar un menú de selección:

:code:`-boot menu=on`

.. note:: :kbd:`-boot` sólo tiene efecto con *firmware* |BIOS|.

Discos
======

Salida
======

.. |VGA| replace:: :abbr:`VGA (Video Graphics Array)`
.. |RAM| replace:: :abbr:`RAM (Random Access Memory)`
.. |NAT| replace:: :abbr:`NAT (Network Address Translation)`
.. |BIOS| replace:: :abbr:`BIOS (Basic I/O System)`
