.. _integridad-datos:

Integridad
**********
La pérdida o deterioro de la información puede deberse a muchas causas
distintas:

.. table::
   :class: perdida-datos

   +-----------------------+---------------------------------+-----------------------+
   | Amenaza               | Contramedida activa             | Contramedida pasiva   |
   +=======================+=================================+=======================+
   | Fallo de disco        | | Monitorización.               | | Recuperación física |
   |                       | | Regleta/\ |SAI|\ s.           | | Copia de seguridad  |
   +-----------------------+---------------------------------+-----------------------+
   | Error humano          | \?                              | | Recuperación lógica |
   |                       |                                 | | Restauración        |
   |                       |                                 | | Copia de seguridad  |
   +-----------------------+---------------------------------+-----------------------+
   | Fallo de software     | | Mantenimiento red eléctrica.  |                       |
   |                       | | |SAI|\ s.                     |                       |
   |                       | | *Journaling*                  |                       |
   |                       | | Actualización del *software*. |                       |
   +-----------------------+---------------------------------+                       |
   | *Malware*             | *Software* de detección         | Copia de seguridad    |
   +-----------------------+---------------------------------+                       |
   | Accidente             | | Redundancia de servidores     |                       |
   |                       | | Mantenimiento adecuado.       |                       |
   +-----------------------+---------------------------------+                       |
   | Desastre natural      | | Ubicación adecuada.           |                       |
   |                       | | Redundancia de servidores.    |                       |
   +-----------------------+---------------------------------+-----------------------+

Algunas de estas medidas son propias de la :ref:`seguridad física <seg-fisica>`,
de modo que se tratan en la unidad sobre ":ref:`seg-entorno`", y otras
por estar relacionadas con el *software* se han dejado para la
unidad de ":ref:`seg-desktop`". Finalmente, tampoco se incluyen aquí las
relacionadas con la redundancia (:ref:`seg-raid` y :ref:`seg-proxy`), por lo que
trataremos tres medidas bajo este epígrafe.

Monitorización de fallos
========================
.. seealso:: Consulte la :ref:`tecnología SMART <SMART>`.

Restauración
============
Cuando recuperamos datos podemos distinguir dos aspectos distintos:

+ La **recuperación** propiamente dicha de la información original sin recurrir
  a una copia. Esta acción se lleva a cabo cuando no se tomó ninguna prevención
  y, en consecuencia, no hay otra versión de los datos distinta a la que se ha
  perdido. Estas técnicas se analizarán en la unidad dedicada a
  ":ref:`seg-desktop`".

+ La **restauración** de la información desde una copia, bien a través de la
  estragia de la copia de seguridad propiamente dicha (a la que dedicaremos
  integramente un epígrafe independiente) bien a través de guardar estados
  previos dentro del propio dispositivo. A esto último, reservamos el término
  *restauración*. La distinción es algo sutil y, en ocasiones, la diferencia
  entre una y otra estrategia muy difusa.

Restauración del sistema
------------------------

**Windows**
   .. todo:: Explicar los puntos de restauración de *Windows*.

**Linux**
   Para lograr el mismo efecto en los sistemas **Linux**, se puede optar por
   varias estrategias:

   + Usar un *software* específico que se encargue de hacer puntual o regularmente
     copias de lo archivos que constituyen el sistema.  Por ejemplo, la aplicación
     :deb:`timeshift` (véase `este artículo de introducción en softzone.es
     <https://www.softzone.es/programas/linux/puntos-restauracion-backup-timeshift/>`_).

     .. note:: Estas aplicaciones, internamente, tendrán su propia estrategia para
        almacenar el estado previo de los archivos. La mencionada
        :program:`timeshift`, por ejemplo, puede o usar :ref:`rsync <rsync>` (lo
        cual en el fondo supone hacer copias de seguridad de los archivos de
        sistema) o hacer instantáneas si el sistema está montado sobre |BTRFS|.

   + Si hemos separado el sistema de los datos en partición aparte, realizar
     instantáneas de la partición del sistema, tal como se explica en el siguiente
     epígrafe sobre restauración de datos.

Restauración de datos
---------------------
La restauración de datos permite la recuperación de una versión anterior del
contenido de los archivos ante errores humanos como el borrado o la alteración
accidentales. Básicamente consiste en mantener distintas versiones de los
archivos en el propio soporte, ya que el almacenamiento de copias en soportes
externos es más bien una :ref:`copia de seguridad <seg-backup>`\ [#]_.

**Windows**
   .. todo:: Para los sistemas *Windows* ver `Shadow Copy <https://en.wikipedia.org/wiki/Shadow_Copy>`_.

**Linux**
   La restauración de datos en sistemas **Linux** se lleva a cabo mediante el
   uso de instantáneas, esto es, la preservación de uno o varios estados del sistema
   de archivos. Para ello debe disponerse de la capacidad de hacer instantáneas
   gracias a:

   + Usar un sistema de archivos que las soporte como |BTRFS| o |ZFS|. El sistema
     de archivos habitual en *Linux*, **ext4**, no las soporta.
   + Hacer instantáneas del volumen lógico de |LVM| sobre el que se encuentra el
     sistema de archivos lo que permite la restauración en sistemas de archivos
     sin soporte para ellas (como **ext4**).
      
   .. seealso:: Consulte :ref:`cómo hacer instantáneas del sistema de ficheros con
      LVM <lvm-snapshots>` y en especial :ref:`cómo hacerlas con snapper
      <snapper>`.

.. _seg-backup:

Copias de seguridad
===================
Para este epígrafe de copias de seguridad conviene:

+ Estudiar **los aspectos teóricos** (tipos de copias, frecuencia, etc) incluidos en 
  :ref:`el apartado del manual sobre copias de seguridad <backups>`.

+ Realizar **copias de seguridad** con algún *software* apropiado. El manual propone
  :ref:`tar <tar>`, :ref:`rsync <rsync>` o :ref:`BackupPC <backuppc>` para
  centralizar las copias, pero puede optarse por otra solución más gráfica y
  sencilla. Lo interesante es que se pueda implementar una política de copias de
  seguridad (incremental, diferencial, etc.)

+ Realizar **imágenes de respaldo** (clonaciones) de sistemas completas. Puede
  usar para ello `Clonezilla <https://clonezilla.org/>`_.

.. include:: /guias/02.seg/99.ejercicios/022.storage.rst

.. rubric:: Notas al pie

.. [#] Ya hemos dicho, no obstante, que la diferencia es muy sútil porque el
   principio es el mismo: hacer copias.

.. |BTRFS| replace:: :abbr:`BTRFS (B-TRee File System)`
.. |ZFS| replace:: :abbr:`ZFS (ZFS File System)`
.. |LVM| replace:: :abbr:`LVM (Logical Volume Management)`
