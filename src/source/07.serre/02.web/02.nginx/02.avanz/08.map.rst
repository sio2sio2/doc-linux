Definición mediante mapeo
=========================
Si requerimos definir una variable dependiendo del valor de otra, disponemos de
la directiva `map
<http://nginx.org/en/docs/http/ngx_http_map_module.html#map>`_:

.. code-block:: nginx

   map $host $dominio {
      hostnames;

      default              "desconocido";
      *.example.net        "example";
      *.dominio.org        "dominio";
      ~[^.]+\.otro\.[^.]+  "otro";
   }

En este caso, se define la variable ``$dominio`` a partir de los valores de la
variable ``$host``. Se comprueba si el valor de esta última concuerda con
alguna entrada de la izquierda y, si es así, se asigna el valor de la columna
derecha correspondiente. Si no hay concordancia, se usa la entrada *default*.
Además, se puede incluir la palabra :kbd:`hostnames` para expresar que lo
contenido son nombres de máquina y que se entienda la notación con asterisco.
Si la lista es larga, puede usarse ``include``:

.. code-block:: nginx

   map $host $dominio {
      hostnames;

      include dominios.txt;
   }

y en el fichero :file:`/etc/nginx/dominios.txt` escribir la lista de dos
columnas.

Dado que el módulo `ngx_http_referer
<http://nginx.org/en/docs/http/ngx_http_referer_module.html>`_ no está incluido
en el ejecutable que viene en el paquete *nginx-light* y el paquete no es
instalable de forma separada, podríamos emular medianamente el comportamiento de
``$invalid_referer`` del siguiente modo:

.. code-block:: nginx

   map $http_referer $invalid_referer {
      default                 1;

      # Dominios  para los que se permite se considera válido el referer.
      "~www.example.net"      0;
      "~example.net"          0;
   }
