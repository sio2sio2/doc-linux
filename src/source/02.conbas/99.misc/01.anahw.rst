Análisis del *hardware*
=======================

Ya se ha expuesto cómo pueden conocerse los dispositivos de almacenamiento
presentes y cómo manipularlos y, aunque sin entrar en detalles, cómo existen bajo
:file:`/dev` ficheros que representan dispositivos de *hardware* en general.

También es muy útil conocer cuál es el procesador en el que corre nuestro y
cuánta la memoria :abbr:`RAM (Random Access Memory)` y de cuánta se está
haciendo uso.

.. _free:
.. index:: free

:command:`free`
   Muestra la cantidad de memoria usada y disponible. Con la opción ``-h``
   muestra las cantidades en la unidad de medida más legible, tal y como hacen
   otros comandos como :ref:`ls <ls>`, :ref:`du <du>` o :ref:`df <df>`::

      $ free -h
                    total        used        free      shared  buff/cache   available
      Mem:            14G        947M         12G         97M        1,7G         13G
      Swap:          2,0G          0B        2,0G

Además, en :file:`/proc` existe un fichero que da también información sobre la
memoria::

   $ cat /proc/meminfo
   
E, igualmente, otro fichero para obtener información sobre el procesador::

   $ cat /proc/cpuinfo

.. _dmidecode:
.. index:: dmidecode

:command:`dmidecode`
   Accede a la `tabla SMBIOS
   <https://en.wikipedia.org/wiki/System_Management_BIOS>`_, la cual ofrece
   información sobre el hardware del sistema. Para disponer de esta orden es
   necesario instalar el paquete homónimo. Usado sin más::

      # dmidecode

   Devuelve toda la tabla. Ahora bien, pueden añadirse opciones que permiten ser
   algo más precisos sobre cuál es la información que se desea consultar. Por
   ejemplo, la opción ``-s``::

      # dmidecode -s processor-version
      AMD A8-7650K Radeon R7, 10 Compute Cores 4C+6G
      # dmidecode -s baseboard-product-name
      A68M-ITX

   O la ``-t``, que permite especificar qué tipo de hardware se quiere
   consultar::

      # dmidecode -t memory

